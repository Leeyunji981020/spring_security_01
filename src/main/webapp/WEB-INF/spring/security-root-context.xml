<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
   xmlns="http://www.springframework.org/schema/security"
   xmlns:beans="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

   <http> 
           <intercept-url pattern="/security/all" access="permitAll" />
      <intercept-url pattern="/security/member" access="hasRole('ROLE_MEMBER')" /> 
         <intercept-url pattern="/security/admin" access="hasRole('ROLE_ADMIN')" />
      
            <!-- 이건 디폴트! 기본 로그인 페이지 그래서 이걸 자기걸로 커스터마이징 하겠다는 것! -->
      <!-- 로그인 페이지 커스텀 화 -->
      <!-- 로그인 성공하면 default-targer-url로 보내고 실패하면 그 밑에로 보냄 -->
        <form-login login-page="/login/loginForm"
              default-target-url="/"
              authentication-failure-url="/login/loginForm?error"
              username-parameter="id"
              password-parameter="password" />

        <logout logout-url="/logout" logout-success-url="/" /> 
      
            <!-- 403 에러 처리 --> <!-- error-page에는 해당 url을 적어준다.(controller에서 확인) -->
        <access-denied-handler error-page="/security/accessError"/>
   </http> 
   
   <!-- provider --> 
   <authentication-manager>
	   <authentication-provider> 
       <user-service> 
       <!-- {noop}member : 암호화 안시키겟다 - 패스워드 적용 안시킴 -->
       
         <user name="member" password="{noop}member" authorities="ROLE_MEMBER" /> 
		<user name="admin" password="{noop}admin" authorities="ROLE_MEMBER,ROLE_ADMIN" />       
       </user-service> 
     </authentication-provider> 
   </authentication-manager>

</beans:beans>